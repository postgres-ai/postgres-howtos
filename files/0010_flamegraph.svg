<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>__lock_text_start (1 samples, 3.57%)</title><rect x="1105.7" y="309" width="42.2" height="15.0" fill="rgb(135,135,250)" rx="2" ry="2" />
<text  x="1108.71" y="319.5" >__l..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 3.57%)</title><rect x="979.3" y="309" width="42.1" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="982.29" y="319.5" >fin..</text>
</g>
<g >
<title>__x64_sys_sendto (3 samples, 10.71%)</title><rect x="1021.4" y="421" width="126.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1024.43" y="431.5" >__x64_sys_sendto</text>
</g>
<g >
<title>ep_poll (2 samples, 7.14%)</title><rect x="937.1" y="389" width="84.3" height="15.0" fill="rgb(114,114,233)" rx="2" ry="2" />
<text  x="940.14" y="399.5" >ep_poll</text>
</g>
<g >
<title>mergejoinscansel (10 samples, 35.71%)</title><rect x="431.4" y="197" width="421.5" height="15.0" fill="rgb(92,92,215)" rx="2" ry="2" />
<text  x="434.43" y="207.5" >mergejoinscansel</text>
</g>
<g >
<title>ineq_histogram_selectivity.part.0 (1 samples, 3.57%)</title><rect x="305.0" y="181" width="42.1" height="15.0" fill="rgb(119,119,237)" rx="2" ry="2" />
<text  x="308.00" y="191.5" >ine..</text>
</g>
<g >
<title>socket_flush.lto_priv.0 (3 samples, 10.71%)</title><rect x="1021.4" y="517" width="126.5" height="15.0" fill="rgb(107,107,228)" rx="2" ry="2" />
<text  x="1024.43" y="527.5" >socket_flush.lt..</text>
</g>
<g >
<title>deconstruct_jointree (2 samples, 7.14%)</title><rect x="178.6" y="309" width="84.3" height="15.0" fill="rgb(134,134,250)" rx="2" ry="2" />
<text  x="181.57" y="319.5" >deconstru..</text>
</g>
<g >
<title>create_index_path (1 samples, 3.57%)</title><rect x="389.3" y="229" width="42.1" height="15.0" fill="rgb(98,98,220)" rx="2" ry="2" />
<text  x="392.29" y="239.5" >cre..</text>
</g>
<g >
<title>initial_cost_mergejoin (10 samples, 35.71%)</title><rect x="431.4" y="213" width="421.5" height="15.0" fill="rgb(82,82,206)" rx="2" ry="2" />
<text  x="434.43" y="223.5" >initial_cost_mergejoin</text>
</g>
<g >
<title>secure_read (2 samples, 7.14%)</title><rect x="937.1" y="501" width="84.3" height="15.0" fill="rgb(111,111,231)" rx="2" ry="2" />
<text  x="940.14" y="511.5" >secure_read</text>
</g>
<g >
<title>get_variable_range.constprop.0 (2 samples, 7.14%)</title><rect x="431.4" y="181" width="84.3" height="15.0" fill="rgb(102,102,223)" rx="2" ry="2" />
<text  x="434.43" y="191.5" >get_varia..</text>
</g>
<g >
<title>obj_cgroup_charge (1 samples, 3.57%)</title><rect x="1063.6" y="293" width="42.1" height="15.0" fill="rgb(119,119,238)" rx="2" ry="2" />
<text  x="1066.57" y="303.5" >obj..</text>
</g>
<g >
<title>schedule (1 samples, 3.57%)</title><rect x="979.3" y="341" width="42.1" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="982.29" y="351.5" >sch..</text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 3.57%)</title><rect x="1063.6" y="309" width="42.1" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="1066.57" y="319.5" >kme..</text>
</g>
<g >
<title>all (28 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(87,87,211)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>make_one_rel (4 samples, 14.29%)</title><rect x="262.9" y="309" width="168.5" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="265.86" y="319.5" >make_one_rel</text>
</g>
<g >
<title>PostmasterMain (28 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(114,114,233)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >PostmasterMain</text>
</g>
<g >
<title>recv (1 samples, 3.57%)</title><rect x="895.0" y="501" width="42.1" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="898.00" y="511.5" >recv</text>
</g>
<g >
<title>main (28 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >main</text>
</g>
<g >
<title>PortalRun (20 samples, 71.43%)</title><rect x="10.0" y="501" width="842.9" height="15.0" fill="rgb(113,113,232)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >PortalRun</text>
</g>
<g >
<title>exec_simple_query (20 samples, 71.43%)</title><rect x="10.0" y="517" width="842.9" height="15.0" fill="rgb(118,118,237)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >exec_simple_query</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 7.14%)</title><rect x="937.1" y="437" width="84.3" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="940.14" y="447.5" >do_syscal..</text>
</g>
<g >
<title>subquery_planner (20 samples, 71.43%)</title><rect x="10.0" y="341" width="842.9" height="15.0" fill="rgb(128,128,245)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >subquery_planner</text>
</g>
<g >
<title>- (2 samples, 7.14%)</title><rect x="937.1" y="469" width="84.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="940.14" y="479.5" >-</text>
</g>
<g >
<title>deconstruct_array (2 samples, 7.14%)</title><rect x="431.4" y="149" width="84.3" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="434.43" y="159.5" >deconstru..</text>
</g>
<g >
<title>pq_recvbuf.lto_priv.0 (3 samples, 10.71%)</title><rect x="895.0" y="517" width="126.4" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="898.00" y="527.5" >pq_recvbuf.lto_..</text>
</g>
<g >
<title>build_simple_rel (1 samples, 3.57%)</title><rect x="136.4" y="293" width="42.2" height="15.0" fill="rgb(137,137,253)" rx="2" ry="2" />
<text  x="139.43" y="303.5" >bui..</text>
</g>
<g >
<title>__sys_sendto (1 samples, 3.57%)</title><rect x="1021.4" y="389" width="42.2" height="15.0" fill="rgb(83,83,208)" rx="2" ry="2" />
<text  x="1024.43" y="399.5" >__s..</text>
</g>
<g >
<title>lappend (1 samples, 3.57%)</title><rect x="347.1" y="213" width="42.2" height="15.0" fill="rgb(109,109,229)" rx="2" ry="2" />
<text  x="350.14" y="223.5" >lap..</text>
</g>
<g >
<title>PortalRunUtility (20 samples, 71.43%)</title><rect x="10.0" y="469" width="842.9" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >PortalRunUtility</text>
</g>
<g >
<title>__schedule (1 samples, 3.57%)</title><rect x="979.3" y="325" width="42.1" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="982.29" y="335.5" >__s..</text>
</g>
<g >
<title>SearchCatCacheInternal.lto_priv.0 (1 samples, 3.57%)</title><rect x="515.7" y="165" width="42.2" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="518.71" y="175.5" >Sea..</text>
</g>
<g >
<title>btrescan (1 samples, 3.57%)</title><rect x="600.0" y="117" width="42.1" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="603.00" y="127.5" >btr..</text>
</g>
<g >
<title>PostgresMain (27 samples, 96.43%)</title><rect x="10.0" y="533" width="1137.9" height="15.0" fill="rgb(119,119,238)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >PostgresMain</text>
</g>
<g >
<title>ineq_histogram_selectivity.part.0 (7 samples, 25.00%)</title><rect x="557.9" y="165" width="295.0" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="560.86" y="175.5" >ineq_histogram_selectivity.part.0</text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 3.57%)</title><rect x="1063.6" y="245" width="42.1" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="1066.57" y="255.5" >arc..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 10.71%)</title><rect x="1021.4" y="437" width="126.5" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="1024.43" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>FunctionCall4Coll (2 samples, 7.14%)</title><rect x="262.9" y="229" width="84.2" height="15.0" fill="rgb(116,116,235)" rx="2" ry="2" />
<text  x="265.86" y="239.5" >FunctionC..</text>
</g>
<g >
<title>refill_obj_stock (1 samples, 3.57%)</title><rect x="1063.6" y="277" width="42.1" height="15.0" fill="rgb(125,125,242)" rx="2" ry="2" />
<text  x="1066.57" y="287.5" >ref..</text>
</g>
<g >
<title>standard_planner (20 samples, 71.43%)</title><rect x="10.0" y="357" width="842.9" height="15.0" fill="rgb(119,119,238)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >standard_planner</text>
</g>
<g >
<title>internal_flush (3 samples, 10.71%)</title><rect x="1021.4" y="501" width="126.5" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="1024.43" y="511.5" >internal_flush</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 3.57%)</title><rect x="979.3" y="357" width="42.1" height="15.0" fill="rgb(136,136,251)" rx="2" ry="2" />
<text  x="982.29" y="367.5" >sch..</text>
</g>
<g >
<title>make_join_rel (10 samples, 35.71%)</title><rect x="431.4" y="277" width="421.5" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="434.43" y="287.5" >make_join_rel</text>
</g>
<g >
<title>get_index_paths (2 samples, 7.14%)</title><rect x="347.1" y="261" width="84.3" height="15.0" fill="rgb(123,123,241)" rx="2" ry="2" />
<text  x="350.14" y="271.5" >get_index..</text>
</g>
<g >
<title>arch_local_irq_enable (1 samples, 3.57%)</title><rect x="1063.6" y="229" width="42.1" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="1066.57" y="239.5" >arc..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 3.57%)</title><rect x="979.3" y="373" width="42.1" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="982.29" y="383.5" >sch..</text>
</g>
<g >
<title>add_paths_to_joinrel (10 samples, 35.71%)</title><rect x="431.4" y="245" width="421.5" height="15.0" fill="rgb(82,82,207)" rx="2" ry="2" />
<text  x="434.43" y="255.5" >add_paths_to_joinrel</text>
</g>
<g >
<title>unix_stream_sendmsg (2 samples, 7.14%)</title><rect x="1063.6" y="373" width="84.3" height="15.0" fill="rgb(84,84,208)" rx="2" ry="2" />
<text  x="1066.57" y="383.5" >unix_stre..</text>
</g>
<g >
<title>preprocess_targetlist (1 samples, 3.57%)</title><rect x="52.1" y="325" width="42.2" height="15.0" fill="rgb(95,95,218)" rx="2" ry="2" />
<text  x="55.14" y="335.5" >pre..</text>
</g>
<g >
<title>socket_flush.lto_priv.0 (1 samples, 3.57%)</title><rect x="1147.9" y="533" width="42.1" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="1150.86" y="543.5" >soc..</text>
</g>
<g >
<title>query_planner (18 samples, 64.29%)</title><rect x="94.3" y="325" width="758.6" height="15.0" fill="rgb(113,113,232)" rx="2" ry="2" />
<text  x="97.29" y="335.5" >query_planner</text>
</g>
<g >
<title>scalarineqsel (8 samples, 28.57%)</title><rect x="515.7" y="181" width="337.2" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="518.71" y="191.5" >scalarineqsel</text>
</g>
<g >
<title>try_mergejoin_path (10 samples, 35.71%)</title><rect x="431.4" y="229" width="421.5" height="15.0" fill="rgb(117,117,236)" rx="2" ry="2" />
<text  x="434.43" y="239.5" >try_mergejoin_path</text>
</g>
<g >
<title>ServerLoop.lto_priv.0 (28 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >ServerLoop.lto_priv.0</text>
</g>
<g >
<title>_bt_saveitem (2 samples, 7.14%)</title><rect x="726.4" y="69" width="84.3" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="729.43" y="79.5" >_bt_savei..</text>
</g>
<g >
<title>set_rel_pathlist (2 samples, 7.14%)</title><rect x="347.1" y="293" width="84.3" height="15.0" fill="rgb(121,121,239)" rx="2" ry="2" />
<text  x="350.14" y="303.5" >set_rel_p..</text>
</g>
<g >
<title>get_attstatsslot (2 samples, 7.14%)</title><rect x="431.4" y="165" width="84.3" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="434.43" y="175.5" >get_attst..</text>
</g>
<g >
<title>process_equivalence (1 samples, 3.57%)</title><rect x="220.7" y="277" width="42.2" height="15.0" fill="rgb(120,120,238)" rx="2" ry="2" />
<text  x="223.71" y="287.5" >pro..</text>
</g>
<g >
<title>pgstat_report_stat (1 samples, 3.57%)</title><rect x="852.9" y="517" width="42.1" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="855.86" y="527.5" >pgs..</text>
</g>
<g >
<title>ExplainQuery (20 samples, 71.43%)</title><rect x="10.0" y="421" width="842.9" height="15.0" fill="rgb(88,88,211)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >ExplainQuery</text>
</g>
<g >
<title>examine_variable (1 samples, 3.57%)</title><rect x="262.9" y="181" width="42.1" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="265.86" y="191.5" >exa..</text>
</g>
<g >
<title>_bt_search (1 samples, 3.57%)</title><rect x="810.7" y="69" width="42.2" height="15.0" fill="rgb(109,109,229)" rx="2" ry="2" />
<text  x="813.71" y="79.5" >_bt..</text>
</g>
<g >
<title>pg_plan_query (20 samples, 71.43%)</title><rect x="10.0" y="389" width="842.9" height="15.0" fill="rgb(123,123,241)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >pg_plan_query</text>
</g>
<g >
<title>btgettuple (5 samples, 17.86%)</title><rect x="642.1" y="101" width="210.8" height="15.0" fill="rgb(126,126,243)" rx="2" ry="2" />
<text  x="645.14" y="111.5" >btgettuple</text>
</g>
<g >
<title>get_restriction_variable (1 samples, 3.57%)</title><rect x="262.9" y="197" width="42.1" height="15.0" fill="rgb(134,134,250)" rx="2" ry="2" />
<text  x="265.86" y="207.5" >get..</text>
</g>
<g >
<title>__alloc_skb (1 samples, 3.57%)</title><rect x="1063.6" y="325" width="42.1" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="1066.57" y="335.5" >__a..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (2 samples, 7.14%)</title><rect x="937.1" y="421" width="84.3" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="940.14" y="431.5" >__x64_sys..</text>
</g>
<g >
<title>build_index_pathkeys (1 samples, 3.57%)</title><rect x="347.1" y="229" width="42.2" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="350.14" y="239.5" >bui..</text>
</g>
<g >
<title>clauselist_selectivity_ext (2 samples, 7.14%)</title><rect x="262.9" y="277" width="84.2" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="265.86" y="287.5" >clauselis..</text>
</g>
<g >
<title>cost_index (1 samples, 3.57%)</title><rect x="389.3" y="213" width="42.1" height="15.0" fill="rgb(138,138,253)" rx="2" ry="2" />
<text  x="392.29" y="223.5" >cos..</text>
</g>
<g >
<title>deconstruct_recurse (1 samples, 3.57%)</title><rect x="178.6" y="293" width="42.1" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="181.57" y="303.5" >dec..</text>
</g>
<g >
<title>pg_class_aclmask_ext.lto_priv.0 (1 samples, 3.57%)</title><rect x="262.9" y="165" width="42.1" height="15.0" fill="rgb(119,119,237)" rx="2" ry="2" />
<text  x="265.86" y="175.5" >pg_..</text>
</g>
<g >
<title>join_search_one_level (10 samples, 35.71%)</title><rect x="431.4" y="293" width="421.5" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="434.43" y="303.5" >join_search_one_level</text>
</g>
<g >
<title>standard_ProcessUtility (20 samples, 71.43%)</title><rect x="10.0" y="437" width="842.9" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >standard_ProcessUtility</text>
</g>
<g >
<title>ExplainOneQuery (20 samples, 71.43%)</title><rect x="10.0" y="405" width="842.9" height="15.0" fill="rgb(81,81,206)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >ExplainOneQuery</text>
</g>
<g >
<title>- (3 samples, 10.71%)</title><rect x="1021.4" y="469" width="126.5" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1024.43" y="479.5" >-</text>
</g>
<g >
<title>ReadBufferExtended (1 samples, 3.57%)</title><rect x="810.7" y="53" width="42.2" height="15.0" fill="rgb(137,137,252)" rx="2" ry="2" />
<text  x="813.71" y="63.5" >Rea..</text>
</g>
<g >
<title>set_baserel_size_estimates (2 samples, 7.14%)</title><rect x="262.9" y="293" width="84.2" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="265.86" y="303.5" >set_baser..</text>
</g>
<g >
<title>scalarineqsel_wrapper (2 samples, 7.14%)</title><rect x="262.9" y="213" width="84.2" height="15.0" fill="rgb(116,116,235)" rx="2" ry="2" />
<text  x="265.86" y="223.5" >scalarine..</text>
</g>
<g >
<title>get_actual_variable_range (7 samples, 25.00%)</title><rect x="557.9" y="149" width="295.0" height="15.0" fill="rgb(123,123,241)" rx="2" ry="2" />
<text  x="560.86" y="159.5" >get_actual_variable_range</text>
</g>
<g >
<title>_bt_checkkeys (2 samples, 7.14%)</title><rect x="642.1" y="53" width="84.3" height="15.0" fill="rgb(128,128,245)" rx="2" ry="2" />
<text  x="645.14" y="63.5" >_bt_check..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 3.57%)</title><rect x="1105.7" y="341" width="42.2" height="15.0" fill="rgb(137,137,252)" rx="2" ry="2" />
<text  x="1108.71" y="351.5" >__w..</text>
</g>
<g >
<title>hash_bytes (1 samples, 3.57%)</title><rect x="810.7" y="37" width="42.2" height="15.0" fill="rgb(119,119,237)" rx="2" ry="2" />
<text  x="813.71" y="47.5" >has..</text>
</g>
<g >
<title>_bt_first (5 samples, 17.86%)</title><rect x="642.1" y="85" width="210.8" height="15.0" fill="rgb(113,113,233)" rx="2" ry="2" />
<text  x="645.14" y="95.5" >_bt_first</text>
</g>
<g >
<title>build_index_paths (2 samples, 7.14%)</title><rect x="347.1" y="245" width="84.3" height="15.0" fill="rgb(94,94,216)" rx="2" ry="2" />
<text  x="350.14" y="255.5" >build_ind..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 3.57%)</title><rect x="979.3" y="293" width="42.1" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="982.29" y="303.5" >fin..</text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 3.57%)</title><rect x="1105.7" y="325" width="42.2" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="1108.71" y="335.5" >__w..</text>
</g>
<g >
<title>pgss_ProcessUtility (20 samples, 71.43%)</title><rect x="10.0" y="453" width="842.9" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >pgss_ProcessUtility</text>
</g>
<g >
<title>distribute_qual_to_rels (1 samples, 3.57%)</title><rect x="220.7" y="293" width="42.2" height="15.0" fill="rgb(129,129,246)" rx="2" ry="2" />
<text  x="223.71" y="303.5" >dis..</text>
</g>
<g >
<title>alloc_skb_with_frags (1 samples, 3.57%)</title><rect x="1063.6" y="341" width="42.1" height="15.0" fill="rgb(120,120,239)" rx="2" ry="2" />
<text  x="1066.57" y="351.5" >all..</text>
</g>
<g >
<title>clause_selectivity_ext (2 samples, 7.14%)</title><rect x="262.9" y="261" width="84.2" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="265.86" y="271.5" >clause_se..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (1 samples, 3.57%)</title><rect x="937.1" y="373" width="42.2" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="940.14" y="383.5" >ep_..</text>
</g>
<g >
<title>postgres (28 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >postgres</text>
</g>
<g >
<title>[unknown] (28 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(126,126,243)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >[unknown]</text>
</g>
<g >
<title>sock_alloc_send_pskb (1 samples, 3.57%)</title><rect x="1063.6" y="357" width="42.1" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="1066.57" y="367.5" >soc..</text>
</g>
<g >
<title>__sys_sendto (3 samples, 10.71%)</title><rect x="1021.4" y="405" width="126.5" height="15.0" fill="rgb(109,109,229)" rx="2" ry="2" />
<text  x="1024.43" y="415.5" >__sys_sendto</text>
</g>
<g >
<title>int4ge (1 samples, 3.57%)</title><rect x="305.0" y="165" width="42.1" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="308.00" y="175.5" >int..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 10.71%)</title><rect x="1021.4" y="453" width="126.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1024.43" y="463.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>__lock_text_start (1 samples, 3.57%)</title><rect x="1105.7" y="293" width="42.2" height="15.0" fill="rgb(106,106,227)" rx="2" ry="2" />
<text  x="1108.71" y="303.5" >__l..</text>
</g>
<g >
<title>scalarineqsel (1 samples, 3.57%)</title><rect x="305.0" y="197" width="42.1" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="308.00" y="207.5" >sca..</text>
</g>
<g >
<title>[unknown] (1 samples, 3.57%)</title><rect x="389.3" y="197" width="42.1" height="15.0" fill="rgb(101,101,222)" rx="2" ry="2" />
<text  x="392.29" y="207.5" >[un..</text>
</g>
<g >
<title>deconstruct_recurse (1 samples, 3.57%)</title><rect x="178.6" y="277" width="42.1" height="15.0" fill="rgb(134,134,250)" rx="2" ry="2" />
<text  x="181.57" y="287.5" >dec..</text>
</g>
<g >
<title>sock_sendmsg (2 samples, 7.14%)</title><rect x="1063.6" y="389" width="84.3" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="1066.57" y="399.5" >sock_send..</text>
</g>
<g >
<title>FillPortalStore (20 samples, 71.43%)</title><rect x="10.0" y="485" width="842.9" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >FillPortalStore</text>
</g>
<g >
<title>standard_join_search (10 samples, 35.71%)</title><rect x="431.4" y="309" width="421.5" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="434.43" y="319.5" >standard_join_search</text>
</g>
<g >
<title>restriction_selectivity (2 samples, 7.14%)</title><rect x="262.9" y="245" width="84.2" height="15.0" fill="rgb(129,129,246)" rx="2" ry="2" />
<text  x="265.86" y="255.5" >restricti..</text>
</g>
<g >
<title>palloc (1 samples, 3.57%)</title><rect x="347.1" y="197" width="42.2" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="350.14" y="207.5" >pal..</text>
</g>
<g >
<title>pgss_planner (20 samples, 71.43%)</title><rect x="10.0" y="373" width="842.9" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >pgss_planner</text>
</g>
<g >
<title>get_actual_variable_endpoint (6 samples, 21.43%)</title><rect x="600.0" y="133" width="252.9" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="603.00" y="143.5" >get_actual_variable_endpoint</text>
</g>
<g >
<title>populate_joinrel_with_paths.lto_priv.0 (10 samples, 35.71%)</title><rect x="431.4" y="261" width="421.5" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="434.43" y="271.5" >populate_joinrel_with_paths.lto_priv.0</text>
</g>
<g >
<title>index_getnext_tid (5 samples, 17.86%)</title><rect x="642.1" y="117" width="210.8" height="15.0" fill="rgb(103,103,224)" rx="2" ry="2" />
<text  x="645.14" y="127.5" >index_getnext_tid</text>
</g>
<g >
<title>do_epoll_wait (2 samples, 7.14%)</title><rect x="937.1" y="405" width="84.3" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="940.14" y="415.5" >do_epoll_..</text>
</g>
<g >
<title>equal.part.0 (1 samples, 3.57%)</title><rect x="220.7" y="261" width="42.2" height="15.0" fill="rgb(132,132,248)" rx="2" ry="2" />
<text  x="223.71" y="271.5" >equ..</text>
</g>
<g >
<title>add_base_rels_to_query (1 samples, 3.57%)</title><rect x="136.4" y="309" width="42.2" height="15.0" fill="rgb(120,120,239)" rx="2" ry="2" />
<text  x="139.43" y="319.5" >add..</text>
</g>
<g >
<title>deconstruct_jointree (1 samples, 3.57%)</title><rect x="10.0" y="325" width="42.1" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >dec..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 7.14%)</title><rect x="937.1" y="453" width="84.3" height="15.0" fill="rgb(95,95,218)" rx="2" ry="2" />
<text  x="940.14" y="463.5" >entry_SYS..</text>
</g>
<g >
<title>[unknown] (1 samples, 3.57%)</title><rect x="852.9" y="501" width="42.1" height="15.0" fill="rgb(84,84,208)" rx="2" ry="2" />
<text  x="855.86" y="511.5" >[un..</text>
</g>
<g >
<title>create_index_paths (2 samples, 7.14%)</title><rect x="347.1" y="277" width="84.3" height="15.0" fill="rgb(99,99,221)" rx="2" ry="2" />
<text  x="350.14" y="287.5" >create_in..</text>
</g>
<g >
<title>_bt_readpage.lto_priv.0 (2 samples, 7.14%)</title><rect x="642.1" y="69" width="84.3" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="645.14" y="79.5" >_bt_readp..</text>
</g>
<g >
<title>GlobalVisTestFor (1 samples, 3.57%)</title><rect x="557.9" y="133" width="42.1" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="560.86" y="143.5" >Glo..</text>
</g>
<g >
<title>epoll_wait (2 samples, 7.14%)</title><rect x="937.1" y="485" width="84.3" height="15.0" fill="rgb(114,114,233)" rx="2" ry="2" />
<text  x="940.14" y="495.5" >epoll_wait</text>
</g>
<g >
<title>sock_def_readable (1 samples, 3.57%)</title><rect x="1105.7" y="357" width="42.2" height="15.0" fill="rgb(84,84,209)" rx="2" ry="2" />
<text  x="1108.71" y="367.5" >soc..</text>
</g>
<g >
<title>__send (3 samples, 10.71%)</title><rect x="1021.4" y="485" width="126.5" height="15.0" fill="rgb(100,100,221)" rx="2" ry="2" />
<text  x="1024.43" y="495.5" >__send</text>
</g>
<g >
<title>drain_obj_stock (1 samples, 3.57%)</title><rect x="1063.6" y="261" width="42.1" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="1066.57" y="271.5" >dra..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (1 samples, 3.57%)</title><rect x="937.1" y="357" width="42.2" height="15.0" fill="rgb(123,123,241)" rx="2" ry="2" />
<text  x="940.14" y="367.5" >ep_..</text>
</g>
<g >
<title>_bt_getrootheight (1 samples, 3.57%)</title><rect x="136.4" y="277" width="42.2" height="15.0" fill="rgb(135,135,250)" rx="2" ry="2" />
<text  x="139.43" y="287.5" >_bt..</text>
</g>
</g>
</svg>
